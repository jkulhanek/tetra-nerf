name: deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["docs"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Pull external resources
        shell: bash
        run: |
          echo "Pulling the following resources:"
          export regex='https:\/\/data\.ciirc\.cvut\.cz\/public\/projects\/([^\/]+)\/([^\"\, ]+)\/([^\"\,\/ ]+)'
          grep -r --include "*.html" --exclude "demo.html" -oh -P "$regex" docs | xargs -I{} bash -c '[[ "{}" =~ $regex ]] && path="${BASH_REMATCH[2]}/${BASH_REMATCH[3]}" && echo "{} -> $path" && mkdir -p "docs/${BASH_REMATCH[2]}" && if [ ! -e "docs/$path" ]; then wget --no-check-certificate --no-verbose "{}" -O "docs/$path"; fi'
          find docs -name '*.html' ! -name 'demo.html' | xargs sed -r -i "s#$regex#./\2/\3#g"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
